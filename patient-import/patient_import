#!/usr/bin/env ruby

require 'fileutils'
require 'pp'

source_file = ARGV.shift
org_unit_id = ARGV.shift
tracked_entity_type_id = ARGV.shift
program_id = ARGV.shift

unless source_file
  puts   <<~DOC
    Must provide name of source file.

    Usage:
      patient_import <source_file> <org_unit_id> <tracked_entity_type_id> <program_id>
  DOC

  abort
end

require 'csv'
require 'json'

patients = CSV.parse(File.open(source_file))

now = DateTime.now.iso8601(3)

human_headers = patients.shift
dhis2_headers = patients.shift

index = 01

until patients.empty? do
  dhis2_patients = patients.shift(200).map do |patient|
    registration_date = DateTime.parse(human_headers.zip(patient).to_h["Registration Date"])
    registration_date = registration_date.iso8601(3)

    patient_data = dhis2_headers.zip(patient).to_h
    patient_data.delete(nil)

    patient_attributes = patient_data.map do |attr_id, value|
      {
        attribute: attr_id,
        value: value
      }
    end

    {
      orgUnit: org_unit_id,
      createdAtClient: now,
      lastUpdated: now,
      trackedEntityType: tracked_entity_type_id,
      lastUpdatedAtClient: now,
      inactive: false,
      deleted: false,
      featureType: "NONE",
      programOwners: [],
      enrollments: [
        {
          orgUnit: org_unit_id,
          program: program_id,
          enrollmentDate: registration_date,
          incidentDate: registration_date
        }
      ],
      relationships: [],
      attributes: patient_attributes
    }
  end


  FileUtils.mkdir_p('payloads')

  payload_file = "payloads/tracked-entities-#{index}.json"
  puts "Outputting to #{payload_file}"

  File.open("payloads/tracked-entities-#{index}.json", "w") do |f|
    f.write({ trackedEntityInstances: dhis2_patients }.to_json)
  end

  index += 1
end
